#!/bin/bash
#+
# This script looks for currently-running badblocks processes, and reports
# how far along they are in their scans.
#
# Note this does not take account of multipass scans; it only reports progress
# on the current (or only) pass.
#
# External package needed: bc.
#
# Copyright 2014 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>.
# Licensed under Creative Commons CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#-

badblocks_exe="$(type -p badblocks)"
if [ -z "$badblocks_exe" ]; then
    echo "cannot find badblocks in your \$PATH." 1>&2
    exit 3
fi
disk_fd=3 # badblocks always opens disk on this file descriptor
clock_ticks=$(getconf CLK_TCK)

did_one=
for procdir in /proc/[0-9]*; do
    if [ "$(readlink "${procdir}"/exe)" = "$badblocks_exe" ]; then
        disk="$(readlink "${procdir}"/fd/${disk_fd})"
        pos="$(perl -lne '/pos:\s+(\d+)/ && print $1' <"${procdir}/fdinfo/${disk_fd}")"
        size="$(cat /sys/block/${disk##*/}/size)"
        starttime="$(perl -lne '@_ = split(/\s+/); print $_[21]' <"${procdir}/stat")"
        now="$(perl -lne '@_ = split(/\s+/); print $_[21]' <"/proc/self/stat")"
          # not strictly accurate, but good enough
        echo -n "proc ${procdir##*/} disk $disk pos $pos/($size * 512) = "
        bc <<<"print $pos * 100 / ($size * 512)"
        echo -n "% in "
        bc <<<"print ($now - $starttime) / $clock_ticks"
        echo " seconds"
        did_one=1
    fi
done
if [ ! $did_one ]; then
    echo "No badblocks processes found."
fi
